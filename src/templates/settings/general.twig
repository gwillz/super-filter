{% import "_includes/forms" as forms %}
{% requireAdmin %}

{% extends "super-filter/_layouts/basesettings" %}

{% set title = "Settings"|t('super-filter') %}
{% set fullPageForm = true  %}
{% set settingsForm = true  %}
{% set selectedSubnavItem = 'settings' %}

{% block actionButton %}

    <div class="buttons">
        <input class="btn submit" type="submit"
               value="{{ 'Save'|t('super-filter') }}">
    </div>

{% endblock %}


{% block content %}
    <script type="text/javascript">
        window.csrfTokenName = "{{ craft.app.config.general.csrfTokenName|e('js') }}";
        window.csrfTokenValue = "{{ craft.app.request.csrfToken|e('js') }}";
    </script>
    <div id="settings-cp">
        <div>
            <input type="hidden" name="action" value="super-filter/super-filter/save-settings-config">

            {{ forms.textField({
                id: 'name',
                label: 'Name',
                name: 'settings[name]',
                value: settings.name
            }) }}

            <input type="hidden" name="settings[entryTemplate]" :value="comboValue" />
            <combo-box v-model="comboValue" :options="options"></combo-box>

            <div class="field">
                <button @click.prevent="installSampleData" class="btn submit">Install Example Data</button>
            </div>
        </div>
    </div>

    <script>

        let app = new Vue({
            el: "#settings-cp",
            data: {
                selected: null,
                options: [
                    {value: 'table', label:'Table'},
                    {value:'list', label:'List'},
                    {value:'grid', label:'Grid'},
                    {value:'custom', label:'Add Custom'}
                ],
                comboValue: '{{ settings.entryTemplate }}'
            },
            methods: {
                installSampleData() {
                    let url = Craft.getActionUrl("super-filter/super-filter/install-sample-data");
                    let data = {};

                    data[csrfTokenName] = csrfTokenValue;

                    axios.post(url, qs.stringify(data))
                        .then(({data}) => {

                        });
                }
            }
        });
    </script>
{% endblock %}
{% js %}

{% endjs %}

